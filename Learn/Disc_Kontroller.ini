; VARIABLEN NAMEN NICHT ÄNDERN
; SEKTIONEN NAMEN NICHT ÄNDERN
; Nicht ändern bedeutet, dass Änderungen auch Änderungen im Programm erfordern

[DATEIEN]
; Informationen der genutzten Dateien
; csv_delimiter: Trennzeichen der csv Dateien
; name Variablen können den Dateipfad enthalten aber benötigen die RICHTIGE ENDUNG	
; csv_topography_name: Name der csv Dateiräpresentation der Regalfachstruktur
; csv_backup_name: Name der Serverseitigen Datensicherungsdatei im csv Format
csv_delimiter = ;
csv_topography_name = topography.csv
csv_backup_name = backup.csv

; Interne Namen: NICHT ÄNDERN
npy_topography_graph_name = topography_graph.npy
npy_fill_level_name = fill_level.npy

[DATENBANK]
; Daten zur Datenbankverbindung NUR IBM (Änderung der SQL-Schlüsselwörter für andere Treiber erforderlich)
; driver: IN {}! nutze pyodbc.drivers() um Treibernamen zu finden (Standard ist: {iSeries Access ODBC Driver})
; database: Name der Datenbank, wie eg.: S06F390T
; system: IP-Addresse des Servers der Datenbank
name = AUTOSQL
passwort = AUTOSQL
driver = {iSeries Access ODBC Driver}
database = S06F390T
system = 10.1.1.1

[COMMANDS]
; Definitionen der Befehlssequenzen MÜSSEN EINZIGARTIG SEIN
; ui_commands: Befehle, die aus der ui aus asgeführt werden können (ausgenommen von: out)
; reload: Initialisiere das System neu OHNE restart
; exit: Stopt letzten Befehl
; m_exit: Stopt Programm (Nicht zur generellen Anwnendung)
; out: Starte output Modus
; remove: Entferne einzelne Disk ohne Kontrolle (ID muss eingscannt/eingegeben werden)
; clean: Zeige Disks Fächer mit ungültigem Status
; clear: Gebe Fächer frei, die bei initialisierung ungültig waren
; lot: Zeige Discs mit ungültigen Lot Nummern
ui_commands = clean, clear, remove, lot, m_exit, exit
reload = r eload
exit = exit
m_exit = masterexit
out = 
remove = r emove
clean = clean
clear = clear
undo = u ndo
lot = lot
date_t = date

[MAIN]
; Konstanten für das Hauptprogram
; Größen der Queue typen (Änderungen werden nur nach Neustart übernommen)
; queue_pool_size: Menge der Vorgemerkten Plätze (10)
; queue_internal_size: Größe der Queues deR internen Datenkommunikation (100)
queue_pool_size = 10
queue_internal_size = 100

; Disc-Daten
; disc_thick_div: Ab welcher größe Discs in große Fächer gelegt weden, es gilt alles < disc_thick_div ist klein
; disc_out_num: Maximale Anzahl der zur Ausgabe angezeigten Discs im manuellen output Modus (0: Alle)
; disc_night_run_div: Ab welcher Anzahl an Tasks per Run ein Run ein Nachtrun ist (0 bedeutet es gibt keine Trennung)
; disc_bridge_unit_div: Ab welcher unit zahl einer Brücke ein anderes Zeitfenster gillt
disc_thick_div = 24
disc_out_num = 0
disc_run_div_num = 3
disc_run_div_0 = 1
disc_run_div_1 = 3
disc_run_div_2 = 5
disc_bridge_unit_div = 6

; Zeit (h, m, s)
; time_cut: Zeit bis wann ein Bestellungeingang am Tag relevant ist
; time_cut_bridge: Zeit bis wann ein Bestellungeingang einer großen Brücke am Tag relevant ist
time_cut = 14, 0, 0
time_cut_bridge = 12, 30, 0


; LED Positions Faktoren (led_position = niedrige_fächer * led_low + hohe_fächer * led_high)
; led_low: Menge der LED pro kleiner Fächer
; led_high: Menge der LED pro hoher Fächer
; led_offset: Offset für LED-Streifen übergänge
; led_offset_pos: Nummer der LED's ab welcher der offset addiert wird
led_low = 4
led_high = 8
led_offset_base = 11
led_offset = 3
led_offset_pos = 132

; Länge des für undo angefertigten Logs
log_len = 5

; Bezeichnungen der Maschienen und LED farben
; masch_num: Nummer der Maschienengruppen
; masch_id_x: Name der xten Maschienengruppe
; FARBEN DÜRFEN NICHT 0/AUS SEIN!
; masch_led_num: menge der Farben im output modus
; masch_x: Farbindex der xten farbe
; Unused:
; masch_x_col_0: Farbe der normalen Runs der xten Maschiengruppe
; masch_x_col_1: Farbe der nacht Runs der xten Maschiengruppe
masch_num = 2
masch_id_0 = VHF 5ax, VHF S1
;masch_0_col_0 = 6
;masch_0_col_1 = 7
masch_id_1 = VHF K5
;masch_1_col_0 = 2
;masch_1_col_1 = 4

;masch_led_num = 4
masch_0 = 6
masch_1 = 4
masch_2 = 3
masch_3 = 2

[SQL_REQUESTS]
; SQL-Anfragen KEIN ";" VERWENDEN, % MUSS ALS %% GESCHRIEBEN WERDEN
; req: Nummer der Anfragen NICHT ÄNDERN!
req = 9
; num steht hier für die nummer der Anfrage mit num >= 0 und num < req
; req_num_tar: Ziel der Anfrage/Zurückgegebener Wert (*-> ganze Zeile)
; req_num_dname: Name der Datenbank
; req_num: nummer der durch "AND" verbundenen Argumente (Argumente müssen nicht getrennt werden)
; req_num_a: a-tes Argument der Anfrage
; Zur Abfrage mit einer Variable ? nutzen eg. MT_NR = ?

; Disk höhen abfrage
req_0_tar = MT_STRK
req_0_dname = QUORRA.MAT_DCPF
req_0 = 3
req_0_0 = MT_STA in ('A', 'W', 'C', 'N')
req_0_1 = MT_MAT_GR like 'ArgenZ%%'
req_0_2 = MT_NR = ?

; Disk Ausgabe Manuell
req_1_tar = MT_ANZU
req_1_dname = QUORRA.MAT_DCPF
req_1 = 3
req_1_0 = MT_STA = 'W'
req_1_1 = MT_MAT_GR like 'ArgenZ%%'
req_1_2 = MT_NR = ?

; Ungültige Disks
req_2_tar = *
req_2_dname = QUORRA.MAT_DCPF
req_2 = 2
req_2_0 = (not MT_STA in ('A', 'W', 'C', 'N') or not MT_MAT_GR like 'ArgenZ%%')
req_2_1 = MT_NR = ?

; Disk Ausgabe automatisch
;req_3_tar = MT_NR
;req_3_dname = QUORRA.MAT_DCPF
;req_3 = 2
;req_3_0 = MT_STA = 'R'
;req_3_1 = MT_MAT_GR like 'ArgenZ%%'

; Maschienen Gruppen
;req_3_tar = RH_MCD, RH_ANZU
;req_3_dname = QUORRA.RUN_PF
;req_3 = 4
;req_3_0 = RH_WF = 'MAN'
;req_3_1 = RH_STA = 'W'
;req_3_2 = RH_MAT_GR like 'ArgenZ%%'
;req_3_3 = RH_MAT_NR = ?

; Nach Gruppen
req_3_tar = RH_ANZU, RH_RUN, RH_MCD
req_3_dname = QUORRA.RUN_PF
req_3 = 4
req_3_0 = RH_WF = 'MAN'
req_3_1 = RH_STA = 'W'
req_3_2 = RH_MAT_GR like 'ArgenZ%%'
req_3_3 = RH_MAT_NR = ?
;req_3_4 = RH_MCD in ?

; Chargen nummern
req_4_tar = MT_CHGNR
req_4_dname = QUORRA.MAT_DCPF
req_4 = 1
req_4_0 = MT_NR = ?

; Gesperte Lot Nummern
req_5_tar = *
req_5_dname = QUORRA.LOT_VWPF
req_5 = 2
req_5_0 = LT_SPRR = 'J'
req_5_1 = LT_LOT = ?

; Eingsngszeit
req_6_tar = AK_ETIM, AK_EDAT
req_6_dname = QUORRA.AUF_KOPF
req_6 = 1
req_6_0 = AK_AUF = ?

; Auftragsnummer
req_7_tar = AP_AUF, AP_ANZG
req_7_dname= QUORRA.AUF_POPF
req_7 = 1
req_7_0 = AP_RUN = ?

; lot 2
req_8_tar = 
req_8_dname = QUORRA.LOT_VWPF
req_8 = 1
req_8_0 = LT_SPRR = 'J'